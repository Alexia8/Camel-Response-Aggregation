
package SonyClient.proxy;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SonyService", targetNamespace = "http://SonyService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SonyService {


    /**
     * 
     * @param studentId
     * @param classId
     */
    @WebMethod
    @RequestWrapper(localName = "getMovieStats", targetNamespace = "http://SonyService/", className = "SonyClient.proxy.GetMovieStats")
    @ResponseWrapper(localName = "getMovieStatsResponse", targetNamespace = "http://SonyService/", className = "SonyClient.proxy.GetMovieStatsResponse")
    @Action(input = "http://SonyService/SonyService/getMovieStatsRequest", output = "http://SonyService/SonyService/getMovieStatsResponse")
    public void getMovieStats(
        @WebParam(name = "studentId", targetNamespace = "")
        int studentId,
        @WebParam(name = "classId", targetNamespace = "")
        int classId);

    /**
     * 
     * @param contentReceiver
     * @return
     *     returns SonyClient.proxy.Movie
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendMovies", targetNamespace = "http://SonyService/", className = "SonyClient.proxy.SendMovies")
    @ResponseWrapper(localName = "sendMoviesResponse", targetNamespace = "http://SonyService/", className = "SonyClient.proxy.SendMoviesResponse")
    @Action(input = "http://SonyService/SonyService/sendMoviesRequest", output = "http://SonyService/SonyService/sendMoviesResponse")
    public Movie sendMovies(
        @WebParam(name = "content_receiver", targetNamespace = "")
        String contentReceiver);

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "getUserActivity", targetNamespace = "http://SonyService/", className = "SonyClient.proxy.GetUserActivity")
    @ResponseWrapper(localName = "getUserActivityResponse", targetNamespace = "http://SonyService/", className = "SonyClient.proxy.GetUserActivityResponse")
    @Action(input = "http://SonyService/SonyService/getUserActivityRequest", output = "http://SonyService/SonyService/getUserActivityResponse")
    public void getUserActivity();

}
